/*
 * ============================================================================
 *  Name     : CLemonPlayerContainer from LemonPlayerContainer.h
 *  Part of  : LemonPlayer
 *  Created  : 17.09.2008 by zengcity
 *  Implementation notes:
 *     Initial content was generated by Series 60 Application Wizard.
 *  Version  :
 *  Copyright: 
 * ============================================================================
 */

// INCLUDE FILES
#include "LemonPlayerContainer.h"

#include <coemain.h>
#include "MacroUtil.h"
#include "AnimationEffectMgr.h"
#include "UIManager.h"

// ================= MEMBER FUNCTIONS =======================

// ---------------------------------------------------------
// CLemonPlayerContainer::ConstructL(const TRect& aRect)
// EPOC two phased constructor
// ---------------------------------------------------------
//
void CLemonPlayerContainer::ConstructL(const TRect& aRect)
	{
	CreateWindowL();
//	SetRect(aRect);

	CAnimationStruct::ConstructL();
	SetTimerTick(1000);

	iUIManager = CUIManager::NewL();
	
	iEffectMgr = CAnimationEffectMgr::NewL(this);	
//	iEffectMgr->UpdateDisplay();
//	StartEffect(KAnimationEffectNormal);
	
//	ActivateL();
	}

// Destructor
CLemonPlayerContainer::~CLemonPlayerContainer()
	{
	SAFE_DELETE(iUIManager);
	SAFE_DELETE(iEffectMgr);
	}

// ---------------------------------------------------------
// CLemonPlayerContainer::SizeChanged()
// Called by framework when the view size is changed
// ---------------------------------------------------------
//
void CLemonPlayerContainer::SizeChanged()
	{
	// TODO: Add here control resize code etc.
	}

// ---------------------------------------------------------
// CLemonPlayerContainer::CountComponentControls() const
// ---------------------------------------------------------
//
TInt CLemonPlayerContainer::CountComponentControls() const
	{
	return 0; // return nbr of controls inside this container
	}

// ---------------------------------------------------------
// CLemonPlayerContainer::ComponentControl(TInt aIndex) const
// ---------------------------------------------------------
//
CCoeControl* CLemonPlayerContainer::ComponentControl(TInt aIndex) const
	{
	switch (aIndex)
		{
		default:
			return NULL;
		}
	}

// ---------------------------------------------------------
// CLemonPlayerContainer::Draw(const TRect& aRect) const
// ---------------------------------------------------------
//
void CLemonPlayerContainer::Draw(const TRect& aRect) const
	{
	CWindowGc& gc = SystemGc();
	// TODO: Add your drawing code here
	// example code...
	gc.SetPenStyle(CGraphicsContext::ENullPen);
	gc.SetBrushColor(KRgbGray);
	gc.SetBrushStyle(CGraphicsContext::ESolidBrush);
	gc.DrawRect(aRect);

	iEffectMgr->Draw(gc);
	}

// ---------------------------------------------------------
// CLemonPlayerContainer::HandleControlEventL(
//     CCoeControl* aControl,TCoeEvent aEventType)
// ---------------------------------------------------------
//
void CLemonPlayerContainer::HandleControlEventL(CCoeControl* /*aControl*/,
		TCoeEvent /*aEventType*/)
	{
	// TODO: Add your control event handler code here
	}

TKeyResponse CLemonPlayerContainer::OfferKeyEventL(const TKeyEvent& aKeyEvent,
		TEventCode aType)
	{
	EAnimationEffectType effect = KAnimationEffectNone;
	
	TKeyResponse res = iUIManager->KeyEventL(aKeyEvent, aType,effect);
	if (res==EKeyWasConsumed)
		{
		StartEffect(effect);
		}
	
	return res;
	}

TBool CLemonPlayerContainer::Tick()
	{
	if (iEffectMgr->Update())
		{
		}
	else
		{
		StopTimer();
		}
	return ETrue;
	}

void CLemonPlayerContainer::Update()
	{
	DrawNow();
	}

TBool CLemonPlayerContainer::UpdateAction()
	{
	return iUIManager->Update();
	}

void CLemonPlayerContainer::UpdateDisplay(CFbsBitGc& aBitGc)
	{
	iUIManager->UpdateDisplay(aBitGc);
	}

void CLemonPlayerContainer::StartEffect(EAnimationEffectType aType)
	{
	iEffectMgr->StartEffect(aType);
	switch (aType)
		{
		case KAnimationEffectSwap:
			iEffectMgr->InitSwap(176, 4, KSwapLeftToRight);
			break;
		case KAnimationEffectNormal:
			iEffectMgr->InitNormal();
			break;
		default:
			break;
		}
	StartTimer();
	}

void CLemonPlayerContainer::DynInitMenuBarL(TInt aResourceId, CEikMenuBar* aMenuBar)
	{
	iUIManager->DynInitMenuBarL(aResourceId,aMenuBar);
	}

void CLemonPlayerContainer::HandleCommandL(TInt aCommand)
	{
	
	}
// End of File  
