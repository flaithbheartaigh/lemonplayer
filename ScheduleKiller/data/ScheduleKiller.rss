/*
============================================================================
 Name		: ScheduleKiller.rss
 Author	  : zengcity
 Copyright   : Your copyright notice
 Description : This file contains all the resources for the ScheduleKiller.
============================================================================
*/

//  RESOURCE IDENTIFIER
NAME	SCHE // 4 letter ID

//  INCLUDES

#include <eikon.rh>
#include <avkon.rsg>
#include <avkon.rh>
#include <appinfo.rh>
#include <avkon.mbg>
#include <ScheduleKiller.mbg>
#include "ScheduleKiller.hrh"
#include "ScheduleKiller.rls"

#define THIS_APP_BITMAP_FILE            "\\resource\\apps\\ScheduleKiller.mif"

//  RESOURCE DEFINITIONS
// -----------------------------------------------------------------------------
//
//	Define the resource file signature
//	This resource should be empty.
//
// -----------------------------------------------------------------------------
//
RESOURCE RSS_SIGNATURE
	{
	}

// -----------------------------------------------------------------------------
//
//	Default Document Name
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_default_document_name
	{
	buf="SCHE";
	}

// -----------------------------------------------------------------------------
//
//	Define default menu and CBA key.
//
// -----------------------------------------------------------------------------
//
RESOURCE EIK_APP_INFO
	{
	}

RESOURCE AVKON_VIEW R_VIEW_MAINSCREEN
	{
	cba = r_cba_mainscreen_options_add;
	menubar = r_menubar_mainscreen;
	}

RESOURCE AVKON_VIEW R_VIEW_MAINSCREEN_TASK_RUNNING
	{
	cba = r_cba_mainscreen_options_task_running;
	menubar = r_menubar_mainscreen;
	}

RESOURCE CBA r_cba_mainscreen_options_add
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; 	txt=qtn_options;},
        CBA_BUTTON {id=ECommandAdd; 		txt=qtn_add;}
        };
    }

RESOURCE CBA r_cba_mainscreen_options_task_running
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; 	txt=qtn_options;},
        CBA_BUTTON {id=ECommandHidden; 		txt=qtn_hidden;}
        };
    }

RESOURCE MENU_BAR r_menubar_mainscreen
	{
	titles =
		{
		MENU_TITLE { menu_pane = r_menupane_mainscreen; }
		};
	}

RESOURCE MENU_PANE r_menupane_mainscreen
	{
	items =
		{
		// added the new Options menu command here
		MENU_ITEM
				{
				command = ECommandAdd;
				txt = qtn_add;
				},
		MENU_ITEM
				{
				command = ECommandRemove;
				txt = qtn_remove_task;
				},				
		MENU_ITEM
				{
				command = ECommandRule;
				txt = qtn_rule;
				},
		MENU_ITEM
				{
				command = ECommandHelp;
				txt = qtn_help;
				},
		MENU_ITEM
				{
				command = ECommandAbout;
				txt = qtn_about;
				},
		MENU_ITEM
				{
				command = EAknSoftkeyExit;
				txt = qtn_exit;
				}
		};
	}

RESOURCE AVKON_VIEW R_VIEW_RULESCREEN
	{
	cba = R_AVKON_SOFTKEYS_OPTIONS_BACK;
	menubar = r_menubar_rulescreen;
	}

RESOURCE AVKON_VIEW R_VIEW_APPSCREEN
	{
	cba = R_AVKON_SOFTKEYS_SELECT_BACK;
	//menubar = r_menubar;
	}

RESOURCE AVKON_VIEW R_VIEW_SETTINGSCREEN
	{
	cba = R_AVKON_SOFTKEYS_OK_BACK;
	//menubar = r_menubar_setting;
	}

RESOURCE MENU_BAR r_menubar_rulescreen
	{
	titles =
		{
		MENU_TITLE { menu_pane = r_menupane_rulescreen; }
		};
	}

RESOURCE MENU_PANE r_menupane_rulescreen
	{
	items =
		{
		// added the new Options menu command here
		MENU_ITEM
				{
				command = ECommandOpen;
				txt = qtn_open;
				},
		MENU_ITEM
				{
				command = ECommandRemove;
				txt = qtn_remove;
				},
		MENU_ITEM
				{
				command = ECommandRuleLunchRun;
				txt = qtn_rule_lunch_run;
				},
		MENU_ITEM
				{
				command = ECommandRuleCancelLunchRun;
				txt = qtn_rule_cancel_lunch_run;
				}
		};
	}

// -----------------------------------------------------------------------------
//
// About dialog resource.
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_about_query_dialog
	{
	flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
	buttons = R_AVKON_SOFTKEYS_OK_EMPTY;
	items=
		{
		DLG_LINE 
			{
			type = EAknCtPopupHeadingPane;
			id = EAknMessageQueryHeaderId;
			itemflags = EEikDlgItemNonFocusing;
			control = AVKON_HEADING
				{
				};
			},
		DLG_LINE
			{
			type = EAknCtMessageQuery;
			id = EAknMessageQueryContentId;
			control = AVKON_MESSAGE_QUERY
				{
				};
			}
		};
	}

RESOURCE AVKON_SETTING_ITEM_LIST r_entry_settings_list
	{
	title = qtn_add_setting;
	  items = 
	    { 
	    AVKON_SETTING_ITEM
	      {
	      identifier 			= EListboxSettingName;
	      setting_page_resource = r_text_setting_page;
	      name 					= qtn_setting_name;
	      },      
	    AVKON_SETTING_ITEM
	      {
	      identifier 			= EListboxSettingType;
	      setting_page_resource = r_binary_setting_page;
	      associated_resource 	= r_binary_texts;
	      name 					= qtn_setting_type_clock;
	      },
		AVKON_SETTING_ITEM
		  {
		  identifier 			= EListboxSettingCountdown;
		  setting_page_resource = r_integer_setting_page;
		  name 					= qtn_type_countdown;
		  },      
		AVKON_SETTING_ITEM
		  {
		  identifier 			= EListboxSettingClocking;
		  setting_page_resource = r_time_setting_page;
		  name 					= qtn_type_clocking;
		  },      
		AVKON_SETTING_ITEM
		  {
		  identifier 			= EListboxSettingRule;
		  setting_page_resource = r_text_setting_page;
		  name 					= qtn_setting_rule;
		  }
	    };
	}

RESOURCE AVKON_BUTTON r_button_add
    {
    flags  = KAknButtonNoFrame;
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = THIS_APP_BITMAP_FILE; 
            bmpid =  EMbmSchedulekillerAdd;
            bmpmask =  EMbmSchedulekillerAdd_mask;
            }  
        };
    }

RESOURCE AVKON_BUTTON r_button_remove
    {
    flags  = KAknButtonNoFrame;
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = THIS_APP_BITMAP_FILE; 
            bmpid =  EMbmSchedulekillerRemove;
            bmpmask =  EMbmSchedulekillerRemove_mask;
            }  
        };
    }

RESOURCE AVKON_BUTTON r_button_rules
    {
    flags  = KAknButtonNoFrame;
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = THIS_APP_BITMAP_FILE; 
            bmpid =  EMbmSchedulekillerRules;
            bmpmask =  EMbmSchedulekillerRules_mask;
            }  
        };
    }

RESOURCE AVKON_BUTTON r_button_about
    {
    flags  = KAknButtonNoFrame;
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = THIS_APP_BITMAP_FILE; 
            bmpid =  EMbmSchedulekillerAbout;
            bmpmask =  EMbmSchedulekillerAbout_mask;
            }  
        };
    }

RESOURCE AVKON_BUTTON r_button_exit
    {
    flags  = KAknButtonNoFrame;
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = THIS_APP_BITMAP_FILE; 
            bmpid =  EMbmSchedulekillerExit;
            bmpmask =  EMbmSchedulekillerExit_mask;
            }  
        };
    }

// ---------------------------------------------------------
//   
//   TEXT SETTING PAGE
//
// ---------------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_text_setting_page
    {
    type = EEikCtEdwin;
    editor_resource_id = r_name_edwin;
    }
    
RESOURCE EDWIN r_name_edwin
    {
    width = 10;
    maxlength = 0x100;
    }

RESOURCE AVKON_SETTING_PAGE r_binary_setting_page
	{
	type = EEikCtEdwin;
	}
	
RESOURCE AVKON_POPUP_SETTING_TEXTS r_binary_texts
    {
    setting_texts_resource = r_texts_binary;
    }
    
RESOURCE ARRAY r_texts_binary
    {
    items =
        {
        AVKON_ENUMERATED_TEXT { value=0; text = qtn_type_countdown; },
        AVKON_ENUMERATED_TEXT { value=1; text = qtn_type_clocking; }
        };
    }   

RESOURCE AVKON_SETTING_PAGE r_integer_setting_page
    {
    type = EAknCtIntegerEdwin;
    editor_resource_id = r_integer_edwin;
    }
    
RESOURCE AVKON_INTEGER_EDWIN r_integer_edwin
    {
    min = 0;
    max = 150;
    }  

RESOURCE AVKON_SETTING_PAGE r_time_setting_page
	{
	type = EEikCtTimeEditor;
	editor_resource_id = r_editor_time;
	}

RESOURCE AKN_ICON_ARRAY r_rule_list_icon_mark
{
	type = EAknIconArraySimple;
	bmpfile = THIS_APP_BITMAP_FILE;
	icons =
	{
		AKN_ICON
		{
		iconId = EMbmSchedulekillerFav;
		maskId = EMbmSchedulekillerFav_mask;
		}      
	};
}

RESOURCE TBUF r_setting_name 			{buf=qtn_setting_name;}
RESOURCE TBUF r_setting_type_clock		{buf=qtn_setting_type_clock;}

RESOURCE TBUF r_text_type_countdown		{buf=qtn_text_type_cluntdown;}
RESOURCE TBUF r_text_type_clocking		{buf=qtn_text_type_clocking;}

RESOURCE TBUF r_text_rule_confirm		{buf=qtn_text_rule_confirm;}

RESOURCE TBUF R_TEXT_WARN_CHOOSE_APP_NULL		{buf = qtn_warn_choose_app_null;}
RESOURCE TBUF R_TEXT_WARN_TIME_LOWNER_THAN_NOW	{buf = qtn_warn_time_lower_than_now;}
RESOURCE TBUF R_TEXT_WARN_DUPLICATE_TASK		{buf = qtn_warn_duplicate_task;}

RESOURCE TBUF R_TEXT_CONFIRM_DELETE_RULE		{buf = qtn_text_confirm_delete_rule;}
RESOURCE TBUF R_TEXT_CONFIRM_EXIT_TASK_RUNNING	{buf = qtn_text_confirm_exit_task_running;}

RESOURCE TBUF R_TEXT_SHUTDOWN			{buf = qtn_text_shutdown;}
RESOURCE TBUF R_TEXT_SINA_WEIBO			{buf = qtn_text_sina_weibo;}

// ---------------------------------------------------------------------------- 
//
// r_localisable_app_info
//
// ---------------------------------------------------------------------------- 
//
RESOURCE LOCALISABLE_APP_INFO r_localisable_app_info
	{
	short_caption = qtn_caption_string;
	caption_and_icon = 
	CAPTION_AND_ICON_INFO
		{
		caption = qtn_caption_string;

		number_of_icons = 1;
	   	icon_file = "\\resource\\apps\\CloverTask.mif";
		};
	}

#include "SHRss.inl"
// End of File
